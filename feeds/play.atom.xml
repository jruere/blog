<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Notes and Stuff - play</title><link href="https://www.ruere.com.ar/" rel="alternate"></link><link href="https://www.ruere.com.ar/feeds/play.atom.xml" rel="self"></link><id>https://www.ruere.com.ar/</id><updated>2019-05-05T20:49:00-03:00</updated><entry><title>AMQP 1.0</title><link href="https://www.ruere.com.ar/amqp-10.html" rel="alternate"></link><published>2019-05-05T20:49:00-03:00</published><updated>2019-05-05T20:49:00-03:00</updated><author><name>Javier Ruere</name></author><id>tag:www.ruere.com.ar,2019-05-05:/amqp-10.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is a WIP!&lt;/p&gt;
&lt;p&gt;I have been using this protocol for years and it has been a bit of a pain, honestly.&lt;/p&gt;
&lt;p&gt;In part because the library I use, &lt;a href="https://qpid.apache.org/proton/index.html"&gt;Qpid Proton&lt;/a&gt;, was a bit green and in part because I didn't fully understand the protocol when I begun.&lt;/p&gt;
&lt;p&gt;Since â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is a WIP!&lt;/p&gt;
&lt;p&gt;I have been using this protocol for years and it has been a bit of a pain, honestly.&lt;/p&gt;
&lt;p&gt;In part because the library I use, &lt;a href="https://qpid.apache.org/proton/index.html"&gt;Qpid Proton&lt;/a&gt;, was a bit green and in part because I didn't fully understand the protocol when I begun.&lt;/p&gt;
&lt;p&gt;Since the use of this protocol has expanded at work, it would be great to have a record of my experience with it to ease communication.&lt;/p&gt;
&lt;p&gt;Finally, for reference, there's an &lt;a href="https://github.com/xinchen10/awesome-amqp"&gt;index of awesome links about AMQP&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;What is AMQP&lt;/h1&gt;
&lt;p&gt;AMQP 1.0 is a peer to peer reliable messaging protocol. It is quite sophisticated and allows for very good performance and several communication patterns.&lt;/p&gt;
&lt;p&gt;The first most important thing to know about this protocol is that it is "AMQP 1.0". There are other versions (0.9 &amp;amp; 0-10) which are deeply different.
The worst part is that the other versions are more widely supported and most libraries and search results will be talking about these other /legacy/ versions.
For example, RabbitMQ supports 0.9 out of the box. On the other hand, Apache Qpid, ActiveMQ or Azure ServiceBus support 1.0.&lt;/p&gt;
&lt;h1&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ODpeIdUdClc&amp;amp;list=PLmE4bZU0qx-wAP02i0I7PJWvDWoCytEjD"&gt;Super nice video intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dzone.com/refcardz/amqp-essentials?chapter=1"&gt;An article intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qpid.apache.org/releases/qpid-proton-0.27.1/proton/python/book/overview.html"&gt;Light overview&lt;/a&gt; from Qpid Proton.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;h2&gt;Peer to Peer&lt;/h2&gt;
&lt;p&gt;This feature is actually quite useful for testing as the broker and the rest of the system can be mocked quite easily.&lt;/p&gt;
&lt;h2&gt;Delivery Guarantees&lt;/h2&gt;
&lt;p&gt;The transmission of messages can have 3 levels of guarantee:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;At-most-once: 1 or 0 times.&lt;/li&gt;
&lt;li&gt;At-least-once: 1 or more times.&lt;/li&gt;
&lt;li&gt;Exactly-once: 1 time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At-most-once is the default for Qpid Proton and I suppose is useful for optional data or if the system is handling losing messages.&lt;/p&gt;
&lt;p&gt;At-least-once, although theoretically impossible (the link may never be restored), works well in practice. It's important to handle duplicates or use idempotent messages.&lt;/p&gt;
&lt;p&gt;Exactly-once is theoretically impossible and practically unlikely. I don't understand how this is seriously advertised.&lt;/p&gt;
&lt;p&gt;The way these guarantees are implemented is by receivers accepting messages when they have been processed and senders settling messages once they are aware that the receiver accepted.&lt;/p&gt;
&lt;h3&gt;Qpid Proton&lt;/h3&gt;
&lt;p&gt;Supports all guarantees and At-most-once is the default.&lt;/p&gt;
&lt;p&gt;At-most-once is the default. In this mode, the receiver does not accept and the sender does not settle. It's fire and forget.&lt;/p&gt;
&lt;p&gt;For At-least-once, the receiver accepts the message once it has been processed and the sender does not need to settle. If the accept did not reach the sender, it will send again eventually.&lt;/p&gt;
&lt;p&gt;For exactly-once, the receiver does the same as At-least-once but will wait for the sender to &lt;em&gt;settle&lt;/em&gt; the message. If the sender does not settle and the link breaks, it will be &lt;em&gt;accepted&lt;/em&gt; again.
Hopefully the link will be restored and the receiver and sender will not have lost all state. ðŸ¤ž&lt;/p&gt;
&lt;p&gt;To get At-least-once with the Reactor API, use &lt;code&gt;auto_accept=False&lt;/code&gt; in the constructor of the &lt;code&gt;MessagingHandler&lt;/code&gt; and leave the rest as default.&lt;/p&gt;
&lt;h2&gt;Flow Control&lt;/h2&gt;
&lt;p&gt;As a receiver, it is possible to specify how many messages you'd like to receive without any sort of synchronization. This is fantastic as it allows to minimize the problem of latency, there will be messages ready on the wire for the system.&lt;/p&gt;
&lt;h1&gt;Other Interesting Features to Explore&lt;/h1&gt;
&lt;h2&gt;Bidirectional Communication&lt;/h2&gt;
&lt;p&gt;The protocol supports maintaining a relation between a message sent and one received. This allows to implement request-response easily.&lt;/p&gt;
&lt;p&gt;It could be interesting to consider this protocol for this access pattern for 2 reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's pretty space efficient.&lt;/li&gt;
&lt;li&gt;It allows for efficient async request-response.&lt;/li&gt;
&lt;li&gt;It can allow to use a broker as a buffer or load-balancer.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;A Better HTTP?&lt;/h2&gt;
&lt;p&gt;Using nodes within a container arranged in a hierarchy allows to handle different stages of communication in different components.&lt;/p&gt;
&lt;p&gt;This sounds like something I like doing in RESTfull APIs where there could be something like: /user/123/tweet/54/comment/9/&lt;/p&gt;</content><category term="networking"></category><category term="messaging"></category><category term="protocol"></category><category term="amqp"></category></entry><entry><title>An Adhoc Net for Quick File Transfer</title><link href="https://www.ruere.com.ar/an-adhoc-net-for-quick-file-transfer.html" rel="alternate"></link><published>2016-09-04T19:49:00-03:00</published><updated>2016-09-04T19:49:00-03:00</updated><author><name>Javier Ruere</name></author><id>tag:www.ruere.com.ar,2016-09-04:/an-adhoc-net-for-quick-file-transfer.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Needing to transfer a lot of data between two computers, I find the perfect excuse to mess with the network.
Unfortunately, my ethernet cable is broken so wireless it will be.&lt;/p&gt;
&lt;p&gt;Transfering file through the router has a rate of 1MB/s. I'm disgusted by this. To improve it â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Needing to transfer a lot of data between two computers, I find the perfect excuse to mess with the network.
Unfortunately, my ethernet cable is broken so wireless it will be.&lt;/p&gt;
&lt;p&gt;Transfering file through the router has a rate of 1MB/s. I'm disgusted by this. To improve it, I'll try an adhoc network between the machines.&lt;/p&gt;
&lt;p&gt;This article will be very similar and is based on my previous B.A.T.M.A.N. articles.&lt;/p&gt;
&lt;h1&gt;Components&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Custom built PC with a Qualcomm Atheros AR9300 WiFi and a current Arch Linux.&lt;/li&gt;
&lt;li&gt;Acer Aspire E15 (E5-521-84UV) laptop with a Broadcom BCM43142 WiFi card and a current Arch Linux.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A current Arch has the 4.7.2 kernel.&lt;/p&gt;
&lt;h1&gt;Objectives&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Setup a direct connexion.&lt;/li&gt;
&lt;li&gt;Transfer files faster than through the router.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Configuration of an Ad-Hoc Connection&lt;/h1&gt;
&lt;p&gt;Since the machines are so similar, the instructions work almost verbatim with the exception of the device name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo iw dev wlan0 set type ibss
$ sudo ip link set up dev wlan0
$ sudo iw dev wlan0 ibss join openadhoc 2472

$ iw dev wlan0 info
Interface wlan0
    ifindex 3
    wdev 0x1
    addr 90:f6:52:17:92:06
    ssid openadhoc
    type IBSS
    wiphy 0
    channel 5 (2432 MHz), width: 20 MHz (no HT), center1: 2432 MHz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This sets both devices to the same channel as peers. Surprisingly, to channel 1 when I asked for channel 13.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping&lt;/code&gt; works immediatelly! :D&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;iw dev wlan0 station dump&lt;/code&gt; shows that a connection is established:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Station d0:53:49:c0:05:6a (on wlan0)
    inactive time:  66 ms
    rx bytes:   85589
    rx packets: 1048
    tx bytes:   0
    tx packets: 0
    tx retries: 0
    tx failed:  0
    rx drop misc:   0
    signal:     -40 [-51, -40, -55] dBm
    signal avg: -37 [-55, -37, -48] dBm
    tx bitrate: 1.0 MBit/s
    rx bitrate: 6.0 MBit/s
    authorized: yes
    authenticated:  yes
    associated: yes
    preamble:   long
    WMM/WME:    yes
    MFP:        no
    TDLS peer:  no
    DTIM period:    0
    beacon interval:100
    connected time: 228 seconds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Suprisingly, on the laptop (Broadcom), the &lt;code&gt;station dump&lt;/code&gt; is empty.&lt;/p&gt;
&lt;p&gt;The IP is provided by the IPv6 autoconfiguration and there's name resolution through Zeroconf.&lt;/p&gt;
&lt;p&gt;There are two strange things. The first one is that the ping takes a second or two to begin.
The second is that the RTT is around a ms (rtt min/avg/max/mdev = 0.999/1.855/9.690/2.092 ms).&lt;/p&gt;
&lt;p&gt;Unfortunately, SSH does not. I suppose it doesn't bind to link scoped addresses.&lt;/p&gt;
&lt;p&gt;To autoconfigure an IP address, I used &lt;code&gt;sudo avahi-autoipd -D wlan0&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Transfering files&lt;/h1&gt;
&lt;p&gt;With &lt;code&gt;rsync&lt;/code&gt;, I get ~1MB/s. A little dissapointed but I'm sure it can be improved.&lt;/p&gt;
&lt;p&gt;Lets try Deluge: 1.5MB/s. A definite improvement but I'm not satisfied.&lt;/p&gt;
&lt;p&gt;Lets mess with the NICs. Lets change retry to 2 and disable power save.&lt;/p&gt;
&lt;p&gt;Now &lt;code&gt;rsync&lt;/code&gt; does ~1.8MB/s. That's a nice improvement but still dissapointing.
Deluge, on the other hand, is doing 5MB/s. This is great!&lt;/p&gt;
&lt;p&gt;I mean, it's pathetic but for WiFi 11n HT20 (Broadcom), it's pretty good.&lt;/p&gt;
&lt;p&gt;I guess I'll disable power save on my laptop!&lt;/p&gt;</content><category term="networking"></category><category term="mesh"></category><category term="linux"></category></entry><entry><title>B.A.T.M.A.N Internet Sharing</title><link href="https://www.ruere.com.ar/batman-internet-sharing.html" rel="alternate"></link><published>2016-03-05T11:17:00-03:00</published><updated>2016-03-05T11:17:00-03:00</updated><author><name>Javier Ruere</name></author><id>tag:www.ruere.com.ar,2016-03-05:/batman-internet-sharing.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This time I'll use a BATMAN mesh to share an existing internet connection.&lt;/p&gt;
&lt;h1&gt;How About Some Encryption?&lt;/h1&gt;
&lt;p&gt;Nope. I failed to setup a WPA Ad-Hoc connection for BATMAN. Don't know what's up.&lt;/p&gt;
&lt;h1&gt;Components&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;(A) Custom built PC with a Qualcomm Atheros AR9300 WiFi (&lt;code&gt;wlan0&lt;/code&gt;) and a D-Link DWA-110 USB â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This time I'll use a BATMAN mesh to share an existing internet connection.&lt;/p&gt;
&lt;h1&gt;How About Some Encryption?&lt;/h1&gt;
&lt;p&gt;Nope. I failed to setup a WPA Ad-Hoc connection for BATMAN. Don't know what's up.&lt;/p&gt;
&lt;h1&gt;Components&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;(A) Custom built PC with a Qualcomm Atheros AR9300 WiFi (&lt;code&gt;wlan0&lt;/code&gt;) and a D-Link DWA-110 USB WiFi (&lt;code&gt;wlan1&lt;/code&gt;) and a current Arch Linux.&lt;/li&gt;
&lt;li&gt;(B) Acer Aspire E15 (E5-521-84UV) laptop with a Broadcom BCM43142 WiFi card and a current Arch Linux.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A current Arch has the 4.4.3 kernel.&lt;/p&gt;
&lt;h1&gt;Objectives&lt;/h1&gt;
&lt;p&gt;The currently working setup is like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Internet â†’ AP â†’ client A

[BATMAN A â†’ BATMAN B](batman.html)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client A and BATMAN A are &lt;code&gt;wlan0&lt;/code&gt; and &lt;code&gt;wlan1&lt;/code&gt;, respectively, on the same host.&lt;/p&gt;
&lt;p&gt;Setup a bridge between wlan0 and wlan1. This should allow the DHCP on the AP to assign addresses. Super easy! :D&lt;/p&gt;
&lt;h1&gt;Bridging Official instructions&lt;/h1&gt;
&lt;p&gt;In &lt;a href="https://www.open-mesh.org/projects/batman-adv/wiki/Quick-start-guide#Mixing-non-BATMAN-systems-with-batman-adv"&gt;Mixing non-B.A.T.M.A.N. systems with batman-adv&lt;/a&gt;, it shows how to do this, and it's super easy!&lt;/p&gt;
&lt;p&gt;The instructions are for bridging &lt;code&gt;eth0&lt;/code&gt; with &lt;code&gt;wlan0&lt;/code&gt;, which I suspect is much easier than &lt;code&gt;wlan0&lt;/code&gt; to &lt;code&gt;wlan1&lt;/code&gt;.
It does one mysterious thing though (I've changed the device to match my setup):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip link set mtu 1532 dev wlan1
iwconfig wlan1 mode ad-hoc essid my-mesh-network ap 02:12:34:56:78:9A channel 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What is that &lt;code&gt;... ap 02:12:34:56:78:9A ...&lt;/code&gt; bit for?&lt;/p&gt;
&lt;p&gt;It's in previous commands but I ignored it in the past.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;man iwconfig&lt;/code&gt; says:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[...] If the link  is  ad-hoc, set the cell identity of the ad-hoc network.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What?&lt;/p&gt;
&lt;h1&gt;Bridging&lt;/h1&gt;
&lt;p&gt;First, I'll change &lt;code&gt;wlan0&lt;/code&gt; not to use DHCP and check everything works.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ip link
[..]
3: wlan0: &amp;lt;BROADCAST,MULTICAST,PROMISC,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP mode DORMANT group default qlen 1000
    link/ether 90:f6:52:17:92:06 brd ff:ff:ff:ff:ff:ff
4: wlan1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1560 qdisc mq master bat0 state UP mode DORMANT group default qlen 1000
    link/ether 00:1b:11:20:dc:2c brd ff:ff:ff:ff:ff:ff
7: bat0: &amp;lt;BROADCAST,MULTICAST&amp;gt; mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether d2:b3:d9:3b:62:ea brd ff:ff:ff:ff:ff:ff

$ ip addr
[...]
3: wlan0: &amp;lt;BROADCAST,MULTICAST,PROMISC,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 90:f6:52:17:92:06 brd ff:ff:ff:ff:ff:ff
    inet6 2002:b5ab:1a2a:1:92f6:52ff:fe17:9206/64 scope global mngtmpaddr dynamic 
       valid_lft 278sec preferred_lft 98sec
    inet6 fe80::92f6:52ff:fe17:9206/64 scope link 
       valid_lft forever preferred_lft forever
4: wlan1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1560 qdisc mq master bat0 state UP group default qlen 1000
    link/ether 00:1b:11:20:dc:2c brd ff:ff:ff:ff:ff:ff
    inet6 fe80::21b:11ff:fe20:dc2c/64 scope link 
       valid_lft forever preferred_lft forever
7: bat0: &amp;lt;BROADCAST,MULTICAST&amp;gt; mtu 1500 qdisc noop state DOWN group default qlen 1000
    link/ether d2:b3:d9:3b:62:ea brd ff:ff:ff:ff:ff:ff
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If we ignore the IPv6 address on wlan0, it looks correct. I'm using a bigger MTU as BATMAN complains otherwise and I'm a generous man.&lt;/p&gt;
&lt;p&gt;I'll call the bridge &lt;code&gt;bat-bridge&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ip link set dev wlan0 master bat-bridge
RTNETLINK answers: Operation not supported
$ sudo ip link set dev bat0 master bat-bridge
$ sudo ip link set up dev wlan0
$ sudo ip link set up dev bat0
$ sudo ip link set up dev bat-bridge
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mmmm... &lt;code&gt;wlan0&lt;/code&gt; will not accept a master. I tried this with the device down as well.&lt;/p&gt;
&lt;p&gt;Lets try to get an address on the brand new and promising &lt;code&gt;bat-bridge&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo dhcpcd bat-bridge
DUID 00:01:00:01:19:8d:d2:59:90:f6:52:17:92:06
bat-bridge: IAID d9:3b:62:ea
bat-bridge: soliciting an IPv6 router
bat-bridge: soliciting a DHCP lease
bat-bridge: no IPv6 Routers available
timed out
dhcpcd exited
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is unfortunate.&lt;/p&gt;
&lt;p&gt;Possible problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bridging 2 wireless NICs instead of one wireless and one wired.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wlan0&lt;/code&gt;'s reluctance to having a master.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;iwconfig&lt;/code&gt; &lt;code&gt;ap&lt;/code&gt; thingy.&lt;/li&gt;
&lt;/ol&gt;</content><category term="networking"></category><category term="mesh"></category><category term="linux"></category></entry><entry><title>B.A.T.M.A.N</title><link href="https://www.ruere.com.ar/batman.html" rel="alternate"></link><published>2016-02-28T21:48:00-03:00</published><updated>2016-02-28T21:48:00-03:00</updated><author><name>Javier Ruere</name></author><id>tag:www.ruere.com.ar,2016-02-28:/batman.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;After much dissapointment with 802.11s, I'm ready to try the other alternatives.&lt;/p&gt;
&lt;p&gt;I've learned that small steps are benefitial in these faulty lands so I'll setup an ad-hoc connection first and after I see that it works, I'll setup BATMAN.&lt;/p&gt;
&lt;p&gt;BATMAN has gone through some deep changes during â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;After much dissapointment with 802.11s, I'm ready to try the other alternatives.&lt;/p&gt;
&lt;p&gt;I've learned that small steps are benefitial in these faulty lands so I'll setup an ad-hoc connection first and after I see that it works, I'll setup BATMAN.&lt;/p&gt;
&lt;p&gt;BATMAN has gone through some deep changes during it's life. AFAIK, it begun as a layer 3 thingy and later became a layer 2 thingaru. With zero network experience, I'm of the opinion that layer 2 is the correct layer for a service of this kind.&lt;/p&gt;
&lt;p&gt;A bit of weirdness introduced by being layer 2 is that all the nodes will appear to be directly connected to each other. I find this unfortunate as the tools I normally use become deceptive. &lt;code&gt;batctl&lt;/code&gt; provides alternatives which understand what's actually going on.&lt;/p&gt;
&lt;h1&gt;Components&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Custom built PC with a Qualcomm Atheros AR9300 WiFi and a current Arch Linux.&lt;/li&gt;
&lt;li&gt;Acer Aspire E15 (E5-521-84UV) laptop with a Broadcom BCM43142 WiFi card and a current Arch Linux.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A current Arch has the 4.4.1 kernel.&lt;/p&gt;
&lt;p&gt;IBSS does not appear to be usable with other configurations on the Atheros WiFi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ iw list
[...]
    valid interface combinations:
         * #{ managed } &amp;lt;= 2048, #{ AP, mesh point } &amp;lt;= 8, #{ P2P-client, P2P-GO } &amp;lt;= 1,
           total &amp;lt;= 2048, #channels &amp;lt;= 1, STA/AP BI must match
         * #{ WDS } &amp;lt;= 2048,
           total &amp;lt;= 2048, #channels &amp;lt;= 1, STA/AP BI must match
[...]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Broadcom supports no combinations, of course.&lt;/p&gt;
&lt;h1&gt;Objectives&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Setup an ad-hoc connection.&lt;/li&gt;
&lt;li&gt;Setup a mesh connection between the two machines with static IPs. To test the connection, &lt;code&gt;ping&lt;/code&gt; would be an good first test.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Configuration of an Ad-Hoc Connection&lt;/h1&gt;
&lt;p&gt;Since the machines are so similar, the instructions work almost verbatim with the exception of the device name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo iw dev wlan0 set type ibss
$ sudo ip addr add 192.168.2.5/24 dev wlan0
$ sudo ip link set up dev wlan0
$ sudo iw dev wlan0 ibss join openadhoc 2432

$ iw dev wlan0 info
Interface wlan0
    ifindex 3
    wdev 0x1
    addr 90:f6:52:17:92:06
    ssid openadhoc
    type IBSS
    wiphy 0
    channel 5 (2432 MHz), width: 20 MHz (no HT), center1: 2432 MHz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This sets both devices to the same channel as peers.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping&lt;/code&gt; works immediatelly! :D&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;iw dev wlan0 station dump&lt;/code&gt; shows that a connection is established:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ iw dev wlan0 station dump
Station d0:53:49:c0:05:6a (on wlan0)
    inactive time:  356 ms
    rx bytes:   17746
    rx packets: 223
    tx bytes:   832
    tx packets: 8
    tx retries: 0
    tx failed:  0
    signal:     -41 [-45, -45, -49] dBm
    signal avg: -41 [-45, -45, -51] dBm
    tx bitrate: 48.0 MBit/s
    rx bitrate: 54.0 MBit/s
    expected throughput:    3.414Mbps
    authorized: yes
    authenticated:  yes
    preamble:   long
    WMM/WME:    yes
    MFP:        no
    TDLS peer:  no
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Suprisingly, on the laptop (Broadcom), the &lt;code&gt;station dump&lt;/code&gt; is empty.&lt;/p&gt;
&lt;h1&gt;Configuration of BATMAN&lt;/h1&gt;
&lt;p&gt;To guide me, I'm reading the &lt;a href="https://www.open-mesh.org/projects/batman-adv/wiki/Quick-start-guide"&gt;quick-start from Open-Mesh.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I need some new stuff on my system for this to work: &lt;code&gt;yaourt -S batctl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OK, LET'S DO THIS!!&lt;/p&gt;
&lt;p&gt;The quick-start uses an ethernet link for the example, which is not very helpful, and does not mention something crucial for WiFi.&lt;/p&gt;
&lt;p&gt;BATMAN will work over any link. That means that it would work over ethernet, ad-hoc or managed. You have to configure the device to the type you want. BATMAN will not change that.&lt;/p&gt;
&lt;p&gt;First configure the device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo iw dev wlan0 set type ibss
$ sudo ip link set up dev wlan0
$ sudo iw dev wlan0 ibss join openbatman 2432
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now configure BATMAN:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo modprobe batman-adv
$ sudo batctl if add wlan0
$ sudo ip link set up dev wlan0
$ sudo batctl if
wlan0: active
$ sudo journalctl -f
[...]
Feb 28 22:22:35 epictetus kernel: batman_adv: bat0: Adding interface: wlan0
Feb 28 22:22:35 epictetus kernel: batman_adv: bat0: The MTU of interface wlan0 is too small (1500) to handle the transport of batman-adv packets. Packets going over this interface will be fragmented on layer2 which could impact the perform
Feb 28 22:22:35 epictetus kernel: batman_adv: bat0: Not using interface wlan0 (retrying later): interface not active
[...]
Feb 28 22:24:43 epictetus kernel: IPv6: ADDRCONF(NETDEV_UP): wlan0: link is not ready
Feb 28 22:24:43 epictetus kernel: batman_adv: bat0: Interface activated: wlan0
[...]
$ sudo ip addr add 192.168.2.5/24 dev bat0
$ sudo ip link set up dev bat0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And it works! :D&lt;/p&gt;</content><category term="networking"></category><category term="mesh"></category><category term="linux"></category></entry><entry><title>A Foray into Mesh Networking</title><link href="https://www.ruere.com.ar/a-foray-into-mesh-networking.html" rel="alternate"></link><published>2016-02-28T19:26:00-03:00</published><updated>2016-02-28T19:26:00-03:00</updated><author><name>Javier Ruere</name></author><id>tag:www.ruere.com.ar,2016-02-28:/a-foray-into-mesh-networking.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;When I learned about mesh networks, I immediately found it appealing and begun craving for one. That was over ten years ago.&lt;/p&gt;
&lt;p&gt;I honestly didn't understand why consumer level network configuration tools (like NetworkManager) don't have the option to join or setup a mesh.&lt;/p&gt;
&lt;p&gt;On this article I'll document â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;When I learned about mesh networks, I immediately found it appealing and begun craving for one. That was over ten years ago.&lt;/p&gt;
&lt;p&gt;I honestly didn't understand why consumer level network configuration tools (like NetworkManager) don't have the option to join or setup a mesh.&lt;/p&gt;
&lt;p&gt;On this article I'll document my impressions into a light attempt to get the most basic mesh functionality using 802.11s.&lt;/p&gt;
&lt;h1&gt;Components&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Custom built PC with a Qualcomm Atheros AR9300 WiFi and a current Arch Linux.&lt;/li&gt;
&lt;li&gt;Acer Aspire E15 (E5-521-84UV) laptop with a Broadcom BCM43142 WiFi card and a current Arch Linux. There are several drivers for Broadcom cards but I can only use the &lt;code&gt;wl&lt;/code&gt; driver which does not support mesh mode. :(&lt;/li&gt;
&lt;li&gt;D-Link DWA-110 USB WiFi to make up for the sucky Broadcom driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A current Arch has the 4.4.1 kernel.&lt;/p&gt;
&lt;p&gt;I did not include my router as it has a super old OpenWRT 12.09 from 2012.&lt;/p&gt;
&lt;h1&gt;Objective&lt;/h1&gt;
&lt;p&gt;Setup a mesh connection between the two machines with static IPs. To test the connection, &lt;code&gt;ping&lt;/code&gt; would be an good first test.&lt;/p&gt;
&lt;h1&gt;Configuration&lt;/h1&gt;
&lt;p&gt;Since the machines are so similar, the instructions work almost verbatim with the exception of the device name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo iw dev wlan0 set type mesh
sudo ip addr add 192.168.2.5/24 dev wlan0
sudo ip link set up dev wlan0
sudo iw dev wlan0 mesh join openmesh

iw dev wlan0 info
Interface wlan0
    ifindex 3
    wdev 0x1
    addr 90:f6:52:17:92:06
    type mesh point
    wiphy 0
    channel 1 (2412 MHz), width: 20 MHz (no HT), center1: 2412 MHz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This sets both devices to the same channel as mesh points.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;iw dev wlan0 station dump&lt;/code&gt; shows that a connection is established:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;iw dev wlan0 station dump
Station 00:1b:11:20:dc:2c (on wlan0)
    inactive time:  486 ms
    rx bytes:   7577
    rx packets: 116
    tx bytes:   174
    tx packets: 3
    tx retries: 7
    tx failed:  0
    signal:     -25 [-28, -30, -33] dBm
    signal avg: -26 [-29, -31, -33] dBm
    Toffset:    -262757995 us
    tx bitrate: 48.0 MBit/s
    rx bitrate: 9.0 MBit/s
    mesh llid:  22429
    mesh plid:  44255
    mesh plink: ESTAB
    mesh local PS mode: ACTIVE
    mesh peer PS mode:  ACTIVE
    mesh non-peer PS mode:  ACTIVE
    authorized: yes
    authenticated:  yes
    preamble:   long
    WMM/WME:    yes
    MFP:        no
    TDLS peer:  no
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;arping&lt;/code&gt; tool gets a reply:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo arping -I wlan0 192.168.2.3
ARPING 192.168.2.3 from 192.168.2.5 wlan0
Unicast reply from 192.168.2.3 [00:1B:11:20:DC:2C]  8.153ms
^CSent 32 probes (1 broadcast(s))
Received 1 response(s)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ARP table gets a new entry:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;arp -n
Address                  HWtype  HWaddress           Flags Mask            Iface
192.168.2.3              ether   00:1b:11:20:dc:2c   C                     wlan0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The mesh path, looks good.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo iw dev wlan0 mpath dump
DEST ADDR         NEXT HOP          IFACE   SN  METRIC  QLEN    EXPTIME     DTIM    DRET    FLAGS
00:1b:11:20:dc:2c 00:1b:11:20:dc:2c wlan0   17  342 0   0   100 0   0x4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately, &lt;code&gt;ping&lt;/code&gt; does not work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ping 192.168.2.3
PING 192.168.2.3 (192.168.2.3) 56(84) bytes of data.
^C
--- 192.168.2.3 ping statistics ---
20 packets transmitted, 0 received, 100% packet loss, time 19008ms
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After trying many things, I could not get this to work.&lt;/p&gt;
&lt;p&gt;I suspect either I'm doing something wrong or there's a problem with a driver or equipment.&lt;/p&gt;
&lt;p&gt;Given that my equipment (the USB dongle and the disappointing Broadcom WiFi) is pretty lousy, I'll try again when I get better hardware.&lt;/p&gt;</content><category term="networking"></category><category term="mesh"></category><category term="linux"></category></entry><entry><title>Choosing a Static Site Generator</title><link href="https://www.ruere.com.ar/choosing-a-static-site-generator.html" rel="alternate"></link><published>2015-10-06T23:44:00-03:00</published><updated>2015-10-06T23:44:00-03:00</updated><author><name>Javier Ruere</name></author><id>tag:www.ruere.com.ar,2015-10-06:/choosing-a-static-site-generator.html</id><summary type="html">&lt;p&gt;An article in my feed about some dude changing his static site generator reminded me of the subject.&lt;/p&gt;
&lt;p&gt;This fellow mentioned Hakyll, which is written in Haskell. I'm always tempted to return to Haskell but lately I've grown so distanced from it that I have a hard time tweaking my â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;An article in my feed about some dude changing his static site generator reminded me of the subject.&lt;/p&gt;
&lt;p&gt;This fellow mentioned Hakyll, which is written in Haskell. I'm always tempted to return to Haskell but lately I've grown so distanced from it that I have a hard time tweaking my own xmonad configuration... so no.&lt;/p&gt;
&lt;p&gt;Since I remembered very little from my previous search, I restarted by asking DuckDuckGo for a "python static site generator" and found two interesting links. The first one a &lt;a href="https://wiki.python.org/moin/StaticSiteGenerator" title="Python Site Generators"&gt;list of Python site generators&lt;/a&gt; and the second a &lt;a href="https://www.staticgen.com/" title="Leaderboard of Static Site Generators"&gt;"leaderboard" of static site generators&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first one was cool but didn't compare.&lt;/p&gt;
&lt;p&gt;The second one also didn't compare but ranked them by some inane criteria. So I chose &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; which was the first of the Python generators by that criteria and it handles RSS, which is my only requirement.&lt;/p&gt;
&lt;p&gt;It's installed as a normal Python package so I created a virtual env, pip installed it and... it failed on MarkupSafe. :(&lt;/p&gt;
&lt;p&gt;Not a promising start but I re-created the virtual environment with Pypy 3 (2.4.0) instead of Python 3.5.0 and it worked. I guess MarkupSafe 0.23 has some speedups.c for Python 3.5.&lt;/p&gt;
&lt;p&gt;N.B.: The docs tell to start the test server with &lt;code&gt;python -m pelican.server&lt;/code&gt; in the quick-start but later recommend using the standard library server. Maybe it's to avoid Python 2 vs 3 issues?&lt;/p&gt;
&lt;p&gt;When starting the dev server with &lt;code&gt;python -m pelican.server&lt;/code&gt; it hangs? No! It just doesn't print the "Listening on port 8000..." I have come to expect.&lt;/p&gt;
&lt;p&gt;The result looks sensible.&lt;/p&gt;
&lt;p&gt;There's still a footer I'd like to remove but some other time.&lt;/p&gt;</content><category term="web"></category><category term="indieweb"></category><category term="python"></category></entry></feed>